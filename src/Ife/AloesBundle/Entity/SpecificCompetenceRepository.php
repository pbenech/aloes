<?php

namespace Ife\AloesBundle\Entity;

use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;
use Ife\AloesBundle\AloesModel\ResultIndexerTrait;

/**
 * SpecificObjectiveRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class SpecificCompetenceRepository extends EntityRepository
{
//    use ResultIndexerTrait;

    private function groupRowsBy($data, $key = 'parent_id')
    {
        $result = array();
        foreach($data as $row) {
            $result[$row[$key]][] = $row;
        }
        return $result;
    }

    private function indexWeightsById($data, $key = 'id')
    {
        $result = array();
        foreach($data as $row) {
        	
            $result[$row[$key]] = $row['weight']; 

        }

        
        return $result;
    }	
	
	
    public function findWeightsByCourse($course)
    { 

    	$sql = "
		SELECT competence_id AS id, weight 
		FROM course_competence_weight
		WHERE course_id = ?
		";

        $conn = $this->_em->getConnection();
        $stmt = $conn->executeQuery($sql, array($course->getId()));
        $data = $stmt->fetchAll();
        return $this->indexWeightsById($data);        
    }

    public function findWeightsByProgram($id, array $selection)
    {
    	
        // If no course selection is specified, select only the
        // mandatory courses. Otherwise take only the selected courses.
        $params = array('program_id' => $id);
        $types = array();
        
        if (count($selection) == 0) {
            $filter = " AND c.is_optional = 0";
            // $filter = " ";
        } else {
            $filter = " AND c.id IN (:selection)";
            $params['selection'] = $selection;
            $types['selection'] = \Doctrine\DBAL\Connection::PARAM_INT_ARRAY;
        }                    

        
        $computeTotalCredits = "
		SET @TOTAL_CREDITS = (
		    SELECT SUM(credits)
		    FROM course c
		    WHERE c.program_id = :program_id  ".$filter.");";
		        
		$computeWeights = "SELECT competence_id AS id,
		ROUND(SUM( credits / @TOTAL_CREDITS * weight ),4) AS weight 
		FROM course c
		JOIN course_competence_weight cc
		ON c.id = cc.course_id
		WHERE c.program_id = :program_id 
		 ".$filter." GROUP BY competence_id;";

        $sql = $computeTotalCredits.$computeWeights;
        
     
        $conn = $this->_em->getConnection();
        $conn->executeQuery($computeTotalCredits, $params, $types);

        $stmt = $conn->executeQuery($computeWeights, $params, $types); 

        $data = $stmt->fetchAll();
        return $this->indexWeightsById($data); 
    }
}
