{% extends 'IfeAloesBundle:Course:layout.html.twig' %}

{% block content %}

<style>
canvas { 
  height: 800px!important; 

  display: block;
}
</style>

  <script type="text/javascript">
    var nodes = null;
    var edges = null;
    var network = null;

    var LENGTH_MAIN = 700, 
        LENGTH_SERVER = 300,
        LENGTH_SERVER2 = 600,
        LENGTH_SUB = 300,
        WIDTH_SCALE = 3,
        WIDTH_SCALE2 = 5,
        GREEN = 'green',
        YELLOW = '#FFFF00',
        RED = '#C5000B',
        ORANGE = 'orange',
    	GRAY = '#666666', 
        BLACK = '#2B1B17';

    // Called when the Visualization API is loaded.
    function draw() {
    
    
      // Create a data table with nodes.
      nodes = [];
      // Create a data table with links.
      edges = [];
      
      
      /* NOEUDS */
      {% for assessment in assessments %}      	        
      	nodes.push({id: 'T{{assessment.id}}', label: "{{assessment.title|e|replace({'&#039;': " "}) }}", group: 'travaux', value: 10});
      {% endfor %} 
    
      {% for objective in objectives %}      	        
      	nodes.push({id: 'O{{objective.id}}', label: "{{objective.title|e|replace({'&#039;': " "}) }}", group: 'objectifs', value: 10});
      {% endfor %}    
      
      {% for competence in competences %}      	        
      	nodes.push({id: 'C{{competence.id}}', label: "{{competence.title|e|replace({'&#039;': " "}) }}", group: 'competences', value: 10});
      {% endfor %}    
      
      /* EDGES */      
      {% for ao in assessmentsObjectives %}      	        
      	 edges.push({from: 'T{{ao.assessment_id}}', to: 'O{{ao.objective_id}}', length: LENGTH_SERVER, color: YELLOW, width: WIDTH_SCALE, label: '{{ao.weight}}'});
      {% endfor %}           

      {% for oc in objectivesCompetences %}      	        
      	 edges.push({from: 'O{{oc.objective_id}}', to: 'C{{oc.competence_id}}', length: LENGTH_SERVER, color: RED, width: WIDTH_SCALE, label: '{{oc.weight}}'});
      {% endfor %}           
      
      /*
      {% for ac in assessementsCompetences %}      	        
      	 edges.push({from: 'C{{ac.competence_id}}', to: 'T{{ac.assessment_id}}', length: LENGTH_SERVER2, color: GREEN, width: WIDTH_SCALE, label: '{{ac.weight}}'});
      {% endfor %}       
	  */
	  
      // create a network
      var container = document.getElementById('mynetwork');
      
      var data = {
        nodes: nodes,
        edges: edges
      };
      
      var options = {
        nodes: {
          scaling: {
            min: 20,
            max: 50
          }
        },
        edges: {
          color: GRAY,
          smooth: false
        },
        physics:{
          barnesHut:{gravitationalConstant:-30000},
          stabilization: {iterations:2500}
        },
        groups: {
          travaux: {
            shape: 'triangle',
            color: 'yellow' // orange
          },
          objectifs: {
            shape: 'square',
            color: "red" // red
          },
          competences: {
            shape: 'square',
            color: "green" // green
          },
          courses: {
              shape: 'square',
              color: "orange" // green
            }          
        }
      };
      network = new vis.Network(container, data, options);
    }
      
  </script>


  <div id="mynetwork"></div>  
	

	        
{% endblock %}
  
{% block scripts %}
	 
  {{ parent() }}
  
  <script type="text/javascript">  
	$(document).ready(function() {
	    draw();
	});    
  </script>		
  
{% endblock  %}

